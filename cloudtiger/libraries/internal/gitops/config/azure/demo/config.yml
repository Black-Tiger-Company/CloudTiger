provider: azure
region: eastus
use_proxy: true

network:
  main_network:
    network_cidr: "10.0.0.0/16"
    prefix: "demo_"
    subnets:
      datalake_dmz:
        cidr_block: "10.0.5.0/24"
        availability_zone: "eastus-a"
        public: true

      datalake:
        cidr_block: "10.0.10.0/24"
        availability_zone: "eastus-a"

      datalake_replication_subnet_1:
        cidr_block: "10.0.6.0/24"
        availability_zone: "eastus-a"
        attached_kubernetes_cluster: "k8s_cluster"

      datalake_replication_subnet_2:
        cidr_block: "10.0.7.0/24"
        availability_zone: "eastus-b"
        attached_kubernetes_cluster: "k8s_cluster"

      datalake_replication_subnet_3:
        cidr_block: "10.0.8.0/24"
        availability_zone: "eastus-c"
        attached_kubernetes_cluster: "k8s_cluster"

    private_subnets_escape_public_subnet: "datalake_dmz"
    # common_availability_zone: ["eastus-a"]


policy:
  storage_full_access_writing:
    actions  : []
    effect   : "Allow"
    resources: ["*"]

profile:
  container_registry_reader_profile:
    role_name: "container_registry_reader"
  default:
    role_name: "default"

role:
  container_registry_reader:
    custom_policies     : []
    default_policies : []
    services    : []
  default:
    custom_policies     : []
    default_policies : ["Reader"]
    services    : []

vm:
  main_network:
    datalake_dmz:
      ssh_bastion_dmz_datalake:
        os_user: "ubuntu"
        group: "bastion"
        type: "bastion"
        prefix: "demo_"
        availability_zone: "eastus-a"
        system_image: "ubuntu_server"
        subnet_type: "public"
        private_ip: "10.0.5.10"
        root_volume_type: "small_root"
        ingress_rules: ["icmp","ssh"]
        ingress_cidr:
          ssh: ["0.0.0.0/0"]
        
        egress_rules: ["default"]
        instance_profile: "default"

    datalake:
      jumpbox:
        os_user: "ubuntu"
        group: "jumpbox"
        type: "jumpbox"
        prefix: "demo_"
        availability_zone: "eastus-a"
        system_image: "ubuntu_server"
        subnet_type: "private"
        private_ip: "10.0.10.10"
        root_volume_type: "small_root"
        data_volume_type: "large_data"
        ingress_rules: ["icmp","ssh", "nexus"]
        ingress_cidr:
          ssh: ["0.0.0.0/0"]
        
        egress_rules: ["default"]
        egress_cidr     : {}
        instance_profile: "container_registry_reader_profile"
      backend:
        os_user: "ubuntu"
        group: "backend"
        type: "backend"
        prefix: "demo_"
        availability_zone: "eastus-a"
        system_image: "ubuntu_server"
        subnet_type: "private"
        private_ip: "10.0.10.11"
        root_volume_type: "large_root"
        data_volume_type: "large_data"
        ingress_rules: ["icmp","ssh", "nexus", "mongo", "http_bis","elastic","elastic_2"]
        ingress_cidr:
          ssh: ["0.0.0.0/0"]
        
        egress_rules: ["default"]
        egress_cidr     : {}
        instance_profile: "container_registry_reader_profile"

ansible:
- name: "add users"
  type: playbook
  source: configure_users_standard
  params:
    hosts: backend
    users:
    - name : custom.username
      key: "ssh-rsa AAAA"
- name: "role demo"
  type: role
  hosts: backend
  roles:
  - source: geerlingguy.postgresql
    params:
      become: true