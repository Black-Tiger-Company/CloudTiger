terraform {
  required_providers {
    keycloak = {
      source = "mrparkers/keycloak"
      version = "4.2.0"
    }
    vault = {
      source = "hashicorp/vault"
      version = "3.14.0"
    }
  }
}

{%- if use_tf_backend_for_service|default(false) %}

terraform {
  backend "pg" {
  }
}
{%- else %}

terraform {
  backend "local" {
  }
}
{%- endif %}

provider "keycloak" {
    client_id     = var.client_id
    username      = var.username
    password      = var.password
    url           = var.url
}

provider "vault" {
    address       = var.vault_address
    token         = var.vault_token
    skip_tls_verify = true
}

variable "client_id" {}

variable "username" {}

variable "password" {}

variable "url" {}

variable "keycloak_config" {}

module "vault" {
  source = "{{ ''.join(["../"] * (scope.split('/')|length + 2)) }}terraform/services/keycloak/resources/vault"
  }

{%- if keycloak.realm|default(False) %}
module "realm" {
  source = "{{ ''.join(["../"] * (scope.split('/')|length + 2)) }}terraform/services/keycloak/resources/realm"

  {# for_each = {
    for realm in lookup(var.keycloak_config, "realm", {}) :
      realm.name => realm
  }  #}
	realm_config = lookup(var.keycloak_config, "realm", {})
}
{%- endif %}

{%- if keycloak.roles|default(False) %}
module "role" {
  source = "{{ ''.join(["../"] * (scope.split('/')|length + 2)) }}terraform/services/keycloak/resources/role"

  for_each = {
    for role in lookup(var.keycloak_config, "roles", {}) :
      role.name => role
  } 
	role_config = each.value
}
{%- endif %}

{%- if keycloak.users|default(False) %}
module "user" {
  source = "{{ ''.join(["../"] * (scope.split('/')|length + 2)) }}terraform/services/keycloak/resources/user"

  for_each = {
    for user in lookup(var.keycloak_config, "users", {}) :
      user.username => user
  } 
	user_config = each.value
}
{%- endif %}

{%- if keycloak.clients|default(False) %}
module "client" {
  source = "{{ ''.join(["../"] * (scope.split('/')|length + 2)) }}terraform/services/keycloak/resources/openid_client"

  for_each = {
    for client in lookup(var.keycloak_config, "clients", {}) :
      client.name => client
  } 
	client_config = each.value
}
{%- endif %}

{%- if keycloak.groups|default(False) %}
module "group" {
  source = "{{ ''.join(["../"] * (scope.split('/')|length + 2)) }}terraform/services/keycloak/resources/group"

  for_each = {
    for group in lookup(var.keycloak_config, "groups", {}) :
      group.name => group
  } 
	group_config = each.value
}
{%- endif %}

{%- if keycloak.users|default(False) %}
output keycloak_user {
  sensitive = true
	value = module.user
}{%- endif %}